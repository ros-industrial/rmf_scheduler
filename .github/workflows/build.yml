name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  industrial_ci:
    strategy:
      matrix:
        env:
          # Clang Build
          - ICI_JOB_NAME: clang
            ROS_DISTRO: humble
            CC: "clang"
            CXX: "clang++"
            TARGET_CMAKE_ARGS: "-DCMAKE_EXE_LINKER_FLAGS=-fuse-ld=lld -DCMAKE_MODULE_LINKER_FLAGS=-fuse-ld=lld -DCMAKE_SHARED_LINKER_FLAGS=-fuse-ld=lld"
          # Adress Sanitizer
          - ICI_JOB_NAME: gcc-asan
            ROS_DISTRO: humble
            TARGET_CMAKE_ARGS: "-DCMAKE_C_FLAGS='-fsanitize=address' -DCMAKE_CXX_FLAGS='-fsanitize=address'"
          # Thread Sanitizer
          - ICI_JOB_NAME: gcc-tsan
            ROS_DISTRO: humble
            TARGET_CMAKE_ARGS: "-DCMAKE_C_FLAGS='-fsanitize=thread -O2 -g -fno-omit-frame-pointer' -DCMAKE_CXX_FLAGS='-fsanitize=thread -O2 -g -fno-omit-frame-pointer'"
    env:
      ISOLATION: "shell"
      CCACHE_DIR: ~/.ccache
    runs-on: ubuntu-latest
    container:
      image: osrf/ros:humble-desktop
    steps:
      # step up caching
      - uses: actions/cache@v2
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ matrix.env.ROS_DISTRO }}-${{ matrix.env.ICI_JOB_NAME }}
      # Run industrial_ci
      - uses: 'ros-industrial/industrial_ci@master'
        env: ${{matrix.env}}
      # Upload Coverage report if configured
